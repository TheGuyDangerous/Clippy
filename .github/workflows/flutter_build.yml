name: Flutter Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  create_env_file:
    runs-on: ubuntu-latest
    steps:
    - name: Create .env file
      run: |
        echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
        echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
        echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> .env
        echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "FIREBASE_IOS_CLIENT_ID=${{ secrets.FIREBASE_IOS_CLIENT_ID }}" >> .env
        echo "FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }}" >> .env
    - uses: actions/upload-artifact@v2
      with:
        name: env-file
        path: .env

  build_web:
    needs: create_env_file
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: env-file
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter build web
    - uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.TOKEN }}
        publish_dir: ./build/web
    - name: Update deployment status
      run: |
        curl -H "Authorization: token ${{ secrets.TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             -X POST \
             -d '{"state": "success", "environment": "production", "description": "Deployed to production"}' \
             https://api.github.com/repos/${{ github.repository }}/deployments/${{ github.run_id }}/statuses

  build_and_release_android:
    needs: create_env_file
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: env-file
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter build apk --split-per-abi
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        asset_name: app-armeabi-v7a-release.apk
        asset_content_type: application/vnd.android.package-archive
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: app-arm64-v8a-release.apk
        asset_content_type: application/vnd.android.package-archive
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-x86_64-release.apk
        asset_name: app-x86_64-release.apk
        asset_content_type: application/vnd.android.package-archive

  build_ios:
    needs: create_env_file
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: env-file
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter build ios --release --no-codesign
    - uses: actions/upload-artifact@v2
      with:
        name: ios-build
        path: build/ios/iphoneos
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-ios
        release_name: iOS Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Compress IPA
      run: |
        cd build/ios/iphoneos
        zip -r app.ipa Runner.app
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/ios/iphoneos/app.ipa
        asset_name: app.ipa
        asset_content_type: application/octet-stream
